{"version":3,"sources":["components/Pages/MangeEmail/components/SelectUserForm/index.js","components/Pages/MangeEmail/components/MangeTabs/index.js","components/Pages/MangeEmail/index.js","utils/reactConfirm.js","utils/Api.js"],"names":["SelectUserForm","onSubmit","disabled","Form","FormGroup","Label","for","Input","type","name","id","placeholder","Button","color","baseColumns","dataField","text","formatter","cell","row","rowIndex","Date","toLocaleString","MangeTabs","sent","received","deleteMassage","useState","activeTab","setActiveTab","toggle","tab","sentColumns","onClick","receivedColumns","expandRow","renderer","content","showExpandColumn","className","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","bootstrap4","classes","data","keyField","columns","MangeEmail","state","current_user","loading","onDeleteMassage","message_id","event","a","stopPropagation","confirm","setState","formData","FormData","set","Api","post","headers","status","filter","msg","onChangeUser","preventDefault","target","user_id","Number","get","isInteger","res","Container","Fade","timeout","in","this","Spinner","React","Component","confirmAjaxError","exception","status_code","response","error","title","config","url","message","confirmText","confirmColor","cancelText","confirmAjaxResponse","axios","create","defaults","baseURL","interceptors","use","Promise","reject"],"mappings":"ySAoBeA,EAjBO,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,SAASC,EAAuB,EAAvBA,SAAuB,uCAEpD,OAAQ,kBAACC,EAAA,EAAD,CAAOF,SAAUA,GACrB,kBAACG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,gBAAX,kBACA,kBAACC,EAAA,EAAD,CAEIC,KAAK,SACLC,KAAK,UACLC,GAAG,eACHC,YAAY,oBAGpB,kBAACC,EAAA,EAAD,CAAQV,SAAUA,EAAUM,KAAM,SAAUK,MAAO,WAAnD,a,oFCZFC,EAAc,CAChB,CACIC,UAAW,KACXC,KAAM,MAEV,CACID,UAAW,YACXC,KAAM,UAEV,CACID,UAAW,cACXC,KAAM,YAEV,CACID,UAAW,UACXC,KAAM,WAEV,CACID,UAAW,aACXC,KAAM,UACNC,UAAW,SAAEC,EAAKC,EAAKC,GAGnB,OAFa,IAAIC,KAAKH,GAEVI,oBA+FTC,EA1FG,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,KAAKC,EAAqC,EAArCA,SAASC,EAA4B,EAA5BA,cAA4B,sDACxBC,mBAAS,SADe,mBACnDC,EADmD,KACxCC,EADwC,KAIpDC,EAAS,SAAAC,GACRH,IAAcG,GAAKF,EAAaE,IAEjCC,EAAW,UAAOlB,EAAP,CACb,CACIC,UAAU,UACVC,KAAK,GACLC,UAAW,SAAEC,EAAKC,EAAKC,GACnB,OACI,kBAAC,WAAD,KACI,kBAACR,EAAA,EAAD,CAAQC,MAAO,SAAUoB,QAASP,EAAcP,EAAIT,GAAG,SAAvD,eAKdwB,EAAe,UAAOpB,EAAP,CACjB,CACIC,UAAU,UACVC,KAAK,GACLC,UAAW,SAAEC,EAAKC,EAAKC,GACnB,OACI,kBAAC,WAAD,KACI,kBAACR,EAAA,EAAD,CAAQC,MAAO,SAAUoB,QAASP,EAAcP,EAAIT,GAAG,aAAvD,eAKdyB,EAAY,CACdC,SAAU,SAAAjB,GAAG,OACT,6BACI,2BAAIA,EAAIkB,WAGhBC,kBAAkB,GAKtB,OACI,yBAAKC,UAAW,QACZ,kBAACC,EAAA,EAAD,CAAMC,MAAI,GACN,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIJ,UAAWK,IAAW,CAAEC,OAAsB,SAAdjB,IAChCK,QAAS,WAAQH,EAAO,UAF5B,SAOJ,kBAACY,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIJ,UAAWK,IAAW,CAAEC,OAAsB,aAAdjB,IAChCK,QAAS,WAAQH,EAAO,cAF5B,cAQR,kBAACgB,EAAA,EAAD,CAAYP,UAAW,OAAQX,UAAWA,GAEtC,kBAACmB,EAAA,EAAD,CAASC,MAAM,QACX,kBAAC,IAAD,CACIC,YAAU,EACVC,QAAS,sBACTC,KAAM3B,EACN4B,SAAU,KACVC,QAASrB,EACTG,UAAWA,KAInB,kBAACY,EAAA,EAAD,CAASC,MAAM,YACX,kBAAC,IAAD,CACIE,QAAS,sBAETD,YAAU,EACVE,KAAM1B,EACN2B,SAAU,KACVjB,UAAWA,EACXkB,QAASnB,Q,QC5G3BoB,E,4MACFC,MAAQ,CACJC,cAAa,EACbC,SAAQ,EACRjC,KAAM,GACNC,SAAS,I,EAGbiC,gBAAkB,SAACC,GAAD,IAAYnD,EAAZ,uDAAmB,OAAnB,8CAA8B,WAAMoD,GAAN,qBAAAC,EAAA,6DAC5CD,EAAME,kBADsC,SAGhCC,MAHgC,yEAM5C,EAAKC,UAAS,SAAAT,GAAK,kCACZA,GADY,IAEfE,SAAQ,QAGNQ,EAAW,IAAIC,UACZC,IAAI,UAAU,EAAKZ,MAAMC,cAClCS,EAASE,IAAI,aAAaR,GAC1BM,EAASE,IAAI,YAAY3D,GAdmB,oBAgBtB4D,IAAIC,KAAK,kBAAmBJ,EAC1C,CACIK,QAAS,CAAC,eAAgB,yBAlBM,WAqBrB,MArBqB,OAqBhCC,OArBgC,qDAwBjB,EAAKhB,MAAtB/B,EAxBkC,EAwBlCA,KAAKC,EAxB6B,EAwB7BA,SAxB6B,KAyBhCjB,EAzBgC,OA0B/B,SA1B+B,QA8B/B,aA9B+B,gCA2BhCgB,EAAOA,EAAKgD,QAAO,SAAAC,GAAG,OAAIA,EAAI/D,KAAOiD,KA3BL,oCA+BhClC,EAAWA,EAAS+C,QAAO,SAAAC,GAAG,OAAIA,EAAI/D,KAAOiD,KA/Bb,6BAmCxC,EAAKK,UAAS,SAAAT,GAAK,kCACZA,GADY,IAEf9B,WACAD,YAtCoC,4EA4CxC,EAAKwC,UAAS,SAAAT,GAAK,kCACZA,GADY,IAEfE,SAAQ,OA9C4B,8EAA9B,uD,EAmDlBiB,a,uCAAe,WAAMd,GAAN,yBAAAC,EAAA,yDACXD,EAAMe,iBACAV,EAAW,IAAIC,SAASN,EAAMgB,QAE9BC,EAAUC,OAAOb,EAASc,IAAI,aAChCD,OAAOE,UAAUH,IAAwB,IAAZA,EALtB,wBAMP,EAAKb,UAAS,SAAAT,GAAK,MAAK,CACpBC,aAAcqB,EACdpB,SAAS,MARN,kBAaeW,IAAIC,KAAK,gBAAiBJ,EACxC,CACIK,QAAS,CAAC,eAAgB,yBAf/B,OAiBgB,OAJbW,EAbH,QAiBKV,SAAiB,EACGU,EAAI9B,KAArB3B,EADa,EACbA,KAAKC,EADQ,EACRA,SACZ,EAAKuC,UAAS,SAAAT,GAAK,kCACZA,GADY,IAEf/B,KAAK,YAAKA,GACVC,SAAS,YAAKA,GACdgC,SAAU,QAvBf,kDA2BH,EAAKO,UAAS,SAAAT,GAAK,kCACZA,GADY,IAEfC,cAAc,EACdhC,KAAM,GACNC,SAAU,GACVgC,SAAU,OAhCX,0D,6GAuCX,OAAO,kBAACyB,EAAA,EAAD,KACH,wBAAI3C,UAAU,oBAAd,eACA,kBAAC4C,EAAA,EAAD,CAAMC,QAAS,IAAKC,GAAIC,KAAK/B,MAAME,QAAUlB,UAAU,QACnD,kBAACgD,EAAA,EAAD,CAAS1E,MAAM,aAGnB,kBAAC,EAAD,CAAgBX,SAAUoF,KAAK/B,MAAME,QAASxD,SAAUqF,KAAKZ,eAC5DY,KAAK/B,MAAMC,cACZ,kBAAC,EAAD,CAAWhC,KAAM8D,KAAK/B,MAAM/B,KAAMC,SAAU6D,KAAK/B,MAAM9B,SAAUC,cAAe4D,KAAK5B,uB,GA1GxE8B,IAAMC,WAkHhBnC,a,+GCrHToC,EAAgB,uCAAG,WAAQC,GAAR,qBAAA9B,EAAA,4DACf+B,EAAcD,EAAUE,SAAStB,SACpB,KAAOqB,GAAe,KAFpB,yBAGmBD,EAAUE,SAAvC1C,KAHU,gBAGa,GAHb,GAGJ2C,aAHI,kBAKX/B,IAAQ,CACVgC,MAAM,gBAAD,OAAkBH,EAAlB,eAAoCD,EAAUK,OAAOC,KAC1DC,QAAS,6BACL,2BACKJ,GAAeH,EAAUO,UAIlCC,YAAa,KACbC,aAAc,OACdC,WAAY,OAfC,2CAAH,sDAqBfC,EAAmB,uCAAG,WAAQrB,GAAR,iCAAApB,EAAA,yDAAYkC,EAAZ,+BAAoB,WAApB,EACWd,EAA7B9B,KADkB,gBACK,GADL,GACZ2C,eADY,0CAGf/B,IAAQ,CACVgC,MAAO,WAAaA,EACpBG,QAASJ,EAETK,YAAa,MACbC,aAAc,OACdC,WAAY,OATK,2CAAH,sDClB1B,IAAMjC,EAAMmC,IAAMC,SAClBpC,EAAIqC,SAASC,QALC,OAQdtC,EAAIuC,aAAad,SAASe,IAA1B,uCACE,WAAMf,GAAN,eAAAhC,EAAA,6DACUoC,EAAKJ,EAASG,OAAOC,IAD/B,SAGUK,EAAoBT,EAASI,GAHvC,gCAKWJ,GALX,2CADF,6FAQG,WAAOC,GAAP,SAAAjC,EAAA,sEACO6B,EAAiBI,GADxB,gCAGQe,QAAQC,OAAOhB,IAHvB,2CARH,uDAce1B","file":"static/js/6.634e1c58.chunk.js","sourcesContent":["import {Button, Form, FormGroup, Input, Label} from \"reactstrap\";\nimport React from \"react\";\n\nconst SelectUserForm =({onSubmit,disabled,...props}) => {\n\n    return  <Form  onSubmit={onSubmit} >\n        <FormGroup>\n            <Label for=\"form_user_id\">select user id</Label>\n            <Input\n\n                type=\"number\"\n                name=\"user_id\"\n                id=\"form_user_id\"\n                placeholder=\"select user id\"\n            />\n        </FormGroup>\n        <Button disabled={disabled} type={\"submit\"} color={\"primary\"}> update</Button>\n    </Form>\n}\n\nexport default SelectUserForm;","import React, {Fragment, useState} from \"react\";\nimport {Button, Card, CardText, CardTitle, Col, Nav, NavItem, NavLink, Row, TabContent, TabPane} from \"reactstrap\";\nimport classnames from \"classnames\"\nimport BootstrapTable from \"react-bootstrap-table-next\";\nconst baseColumns = [\n    {\n        dataField: 'id',\n        text: 'ID',\n    },\n    {\n        dataField: 'sender_id',\n        text: 'sender',\n    },\n    {\n        dataField: 'receiver_id',\n        text: 'receiver',\n    },\n    {\n        dataField: 'subject',\n        text: 'subject',\n    },\n    {\n        dataField: 'created_at',\n        text: 'created',\n        formatter: ( cell,row, rowIndex) => {\n            const date = new Date(cell);\n\n            return date.toLocaleString()\n        }\n    }\n];\n\nconst MangeTabs = ({sent,received,deleteMassage,...props}) => {\n    const [activeTab, setActiveTab] = useState('sent');\n\n\n    const toggle = tab => {\n        if(activeTab !== tab) setActiveTab(tab);\n    }\n    const sentColumns = [...baseColumns,\n        {\n            dataField:\"actions\",\n            text:'',\n            formatter: ( cell,row, rowIndex) => {\n                return (\n                    <Fragment>\n                        <Button color={\"danger\"} onClick={deleteMassage(row.id,\"sent\")}>Delete</Button>\n                    </Fragment>\n                );\n            }\n        }];\n    const receivedColumns = [...baseColumns,\n        {\n            dataField:\"actions\",\n            text:'',\n            formatter: ( cell,row, rowIndex) => {\n                return (\n                    <Fragment>\n                        <Button color={\"danger\"} onClick={deleteMassage(row.id,\"receiver\")}>Delete</Button>\n                    </Fragment>\n                );\n            }\n        }];\n    const expandRow = {\n        renderer: row => (\n            <div>\n                <p>{row.content}</p>\n            </div>\n        ),\n        showExpandColumn: true,\n\n    };\n\n\n    return (\n        <div className={\"my-4\"}>\n            <Nav  tabs>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === 'sent' })}\n                        onClick={() => { toggle('sent'); }}\n                    >\n                        sent\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === 'received' })}\n                        onClick={() => { toggle('received'); }}\n                    >\n                        received\n                    </NavLink>\n                </NavItem>\n            </Nav>\n            <TabContent className={'pt-4'} activeTab={activeTab}>\n\n                <TabPane tabId=\"sent\">\n                    <BootstrapTable\n                        bootstrap4\n                        classes={\"table-responsive-sm\"}\n                        data={sent}\n                        keyField={\"id\"}\n                        columns={sentColumns}\n                        expandRow={expandRow}\n\n                    />\n                </TabPane>\n                <TabPane tabId=\"received\">\n                    <BootstrapTable\n                        classes={\"table-responsive-sm\"}\n\n                        bootstrap4\n                        data={received}\n                        keyField={\"id\"}\n                        expandRow={expandRow}\n                        columns={receivedColumns}\n                    />\n                </TabPane>\n            </TabContent>\n        </div>\n    );\n}\nexport default MangeTabs","import React from \"react\";\nimport {Container, Fade, Spinner} from \"reactstrap\";\nimport confirm from \"reactstrap-confirm\";\n\nimport {SelectUserForm,MangeTabs} from \"./components/index.js\"\nimport Api from \"../../../utils/Api\";\n\nclass MangeEmail extends React.Component {\n    state = {\n        current_user:false,\n        loading:false,\n        sent: [],\n        received:[],\n\n    }\n    onDeleteMassage = (message_id,type = \"sent\") => async event => {\n        event.stopPropagation();\n\n        if (! await confirm()){\n            return ;\n        }\n        this.setState(state => ({\n            ...state,\n            loading:true,\n        }))\n\n        const formData = new FormData();\n        formData.set(\"user_id\",this.state.current_user);\n        formData.set(\"message_id\",message_id);\n        formData.set(\"user_type\",type);\n        try {\n            const res = await Api.post(\"/delete-message\", formData,\n                {\n                    headers: {'Content-Type': 'multipart/form-data'}\n                });\n\n            if (res.status !== 200){\n                return ;\n            }\n            let { sent,received} = this.state\n            switch (type) {\n                case \"sent\":{\n                    sent = sent.filter(msg => msg.id !== message_id);\n                    break\n                }\n                case \"receiver\":{\n                    received = received.filter(msg => msg.id !== message_id);\n                    break\n                }\n            }\n            this.setState(state => ({\n                ...state,\n                received,\n                sent,\n            }))\n\n        } catch (e) {\n\n        } finally {\n            this.setState(state => ({\n                ...state,\n                loading:false,\n            }))\n        }\n    };\n\n    onChangeUser = async event => {\n        event.preventDefault();\n        const formData = new FormData(event.target);\n\n        const user_id = Number(formData.get(\"user_id\"));\n        if (Number.isInteger(user_id) && user_id !== 0) {\n            this.setState(state => ({\n                current_user: user_id,\n                loading: true\n            }))\n\n\n            try {\n                const res = await Api.post(\"/get-messages\", formData,\n                    {\n                        headers: {'Content-Type': 'multipart/form-data'}\n                    });\n                if (res.status === 200) {\n                    const {sent,received} = res.data;\n                    this.setState(state => ({\n                        ...state,\n                        sent: [...sent],\n                        received: [...received],\n                        loading : false,\n                    }))\n                }\n            } catch (ignore) {\n                this.setState(state => ({\n                    ...state,\n                    current_user: false,\n                    sent: [],\n                    received: [],\n                    loading : false,\n                }))\n            }\n        }\n    }\n    render()\n    {\n        return <Container>\n            <h1 className=\"text-center py-4\">Mange Email</h1>\n            <Fade timeout={500} in={this.state.loading}  className=\"mt-3\">\n                <Spinner color=\"success\" />\n            </Fade>\n\n            <SelectUserForm disabled={this.state.loading} onSubmit={this.onChangeUser}/>\n            {this.state.current_user &&\n            <MangeTabs sent={this.state.sent} received={this.state.received} deleteMassage={this.onDeleteMassage} />\n            }\n\n        </Container>\n    }\n\n}\n\nexport default MangeEmail","import React from \"react\";\nimport confirm from \"reactstrap-confirm\";\n\n\nconst confirmAjaxError = async  (exception) => {\n    const status_code = exception.response.status;\n    if (status_code >= 400 && status_code <= 600) {\n        const {data:{error = false} = {}} = exception.response;\n\n        await confirm({\n            title: `Server Error ${status_code}  - ${exception.config.url}`,\n            message: <div>\n                <p>\n                    {error ? error: exception.message}\n                </p>\n            </div>,\n\n            confirmText: 'OK',\n            confirmColor: 'info',\n            cancelText: null\n        });\n    }\n};\nexport{confirmAjaxError}\n\nconst  confirmAjaxResponse = async  (res,title = \"response\") => {\n    const {data:{error = false} = {}} = res\n    if (error) {\n        await confirm({\n            title: \"Error - \" + title,\n            message: error,\n\n            confirmText: 'Ok!',\n            confirmColor: 'info',\n            cancelText: null\n        });\n    }\n};\nexport {confirmAjaxResponse};\n","import axios from 'axios';\nimport {confirmAjaxResponse,confirmAjaxError} from \"./reactConfirm\";\n\nlet API_URL = \"/api\";\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n    API_URL = 'http://localhost:5000/api';\n}\nconst Api = axios.create();\nApi.defaults.baseURL = API_URL;\n\n\nApi.interceptors.response.use(\n  async response => {\n      const url =response.config.url;\n\n      await confirmAjaxResponse(response,url);\n\n      return response\n  },\n   async (error) => {\n    await confirmAjaxError(error);\n\n    return Promise.reject(error);\n  });\n\nexport default Api\n"],"sourceRoot":""}